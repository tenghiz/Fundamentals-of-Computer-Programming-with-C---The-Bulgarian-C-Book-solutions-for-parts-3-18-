// Binary search (contain BUGS!!!)

using System;

class BinarySearch
{
    public static void Main()
    {
        Console.Write("Please enter the length of array: ");
        int a = int.Parse(Console.ReadLine());
        int[] arr = new int[a];
        Random rnd = new Random();
        Console.WriteLine("Generated array: ");
        for (int i = 0;i<a;i++)
        {
            arr[i] = rnd.Next(100);
            Console.Write(arr[i] + " ");
        }
        Console.WriteLine();
        int value = arr[0];
        Console.WriteLine("The value is " + value);
        Console.WriteLine("Sorted array: ");
        for (int i=0;i<a;i++)
        {
            for (int j = 1;j<a;j++)
            {
                int temp;
                if (arr[j] < arr[j-1])
                {
                    temp = arr[j];
                    arr[j] = arr[j - 1];
                    arr[j - 1] = temp;
                }
            }
        }
        for (int i = 0; i < a; i++)
        {
            Console.Write(arr[i] + " ");
        }
        Console.WriteLine();
        Console.WriteLine("Performing binary search...");
        int left_border = 0;
        int right_border = a-1;
        while(true)
        {
            if (value == arr[left_border + right_border])
            {
                Console.WriteLine("Value found! Its index is " + (left_border + right_border));
                break;
            }
            if (value == arr[left_border])
            {
                Console.WriteLine("Value found! Its index is " + left_border);
                break;
            }
            if ((value < arr[left_border + right_border]) && (value != arr[left_border]))
            {
                Console.WriteLine("Value is between {0} and {1}", left_border, right_border);
                right_border = (right_border/2)-1;
            }
            if (value > arr[left_border + right_border])
            {
                Console.WriteLine("Value is above {0}", (left_border + right_border));
                left_border = ((left_border + right_border)/ 2);
            }
        }
    }
}