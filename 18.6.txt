// 18.6 - HashTable which allows a variable number of item per value

// Please make attention how List<object> is initialized:
// constructor() {parameters}.
// Use of curly brackets after the constructor is allowed by C#3.

// NB! Only public properties can be set up in a following way

// https://softwareengineering.stackexchange.com/questions/171710/creating-object-parameters-in
// https://stackoverflow.com/questions/25809096/use-of-curly-braces-with-object-construction
// https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/how-to-initialize-objects-by-using-an-object-initializer
// https://docs.microsoft.com/en-us/dotnet/framework/data/adonet/ef/language-reference/initialization-expressions

using System;
using System.Collections.Generic;

namespace Dict
{
    class Program
    {
        static void Main()
        {
            HashDictionary<int, List<object>> myMyDict = new HashDictionary<int, List<object>>();
            myMyDict[24] = new List<object>() { 1, 'a', "jojotte"};
            myMyDict[12] = new List<object>() { "rur", 12L};
            myMyDict.Set(16, new List<object>() {1,2,3});
            foreach(var item in myMyDict)
            {
                Console.WriteLine(item.Key);
                foreach(var item1 in item.Value)
                {
                    Console.WriteLine(item1);
                }
                Console.WriteLine();
            }
            
        }
    }
}